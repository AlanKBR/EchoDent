"""Initial migration for PostgreSQL multi-tenant architecture

Revision ID: 1bbe8ad76a77
Revises: 
Create Date: 2025-10-31 22:02:29.992937

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1bbe8ad76a77'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fechamento_caixa',
    sa.Column('data_fechamento', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('ABERTO', 'FECHADO', name='caixa_status_enum'), server_default=sa.text("'ABERTO'"), nullable=False),
    sa.Column('saldo_apurado', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('data_fechamento')
    )
    op.create_table('pacientes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome_completo', sa.String(length=200), nullable=False),
    sa.Column('data_nascimento', sa.Date(), nullable=True),
    sa.Column('cpf', sa.String(length=14), nullable=True),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('apelido', sa.String(length=100), nullable=True),
    sa.Column('cep', sa.String(length=9), nullable=True),
    sa.Column('logradouro', sa.String(length=200), nullable=True),
    sa.Column('numero', sa.String(length=20), nullable=True),
    sa.Column('complemento', sa.String(length=100), nullable=True),
    sa.Column('bairro', sa.String(length=120), nullable=True),
    sa.Column('cidade', sa.String(length=120), nullable=True),
    sa.Column('estado', sa.String(length=2), nullable=True),
    sa.Column('odontograma_inicial_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('odontograma_inicial_data', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf')
    )
    op.create_table('procedimentos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=200), nullable=False),
    sa.Column('valor_padrao', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'DENTISTA', 'SECRETARIA', name='role_enum'), nullable=False),
    sa.Column('nome_completo', sa.String(length=200), nullable=True),
    sa.Column('cro_registro', sa.String(length=100), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('agendamentos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.Column('dentista_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('MARCADO', 'CONFIRMADO', 'SALA_ESPERA', 'EM_ATENDIMENTO', 'FINALIZADO', 'CANCELADO', name='status_agendamento_enum'), server_default=sa.text("'MARCADO'"), nullable=False),
    sa.ForeignKeyConstraint(['dentista_id'], ['usuarios.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['paciente_id'], ['pacientes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('agendamentos', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_agendamentos_dentista_id'), ['dentista_id'], unique=False)

    op.create_table('anamneses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.Column('alergias', sa.Text(), nullable=True),
    sa.Column('medicamentos_uso_continuo', sa.Text(), nullable=True),
    sa.Column('historico_doencas', sa.Text(), nullable=True),
    sa.Column('has_red_flags', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('status', sa.Enum('PENDENTE', 'CONCLUIDA', name='anamnese_status_enum'), server_default=sa.text("'PENDENTE'"), nullable=False),
    sa.Column('data_atualizacao', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['paciente_id'], ['pacientes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('paciente_id')
    )
    op.create_table('calendar_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), server_default=sa.text("''"), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('all_day', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('dentista_id', sa.Integer(), nullable=True),
    sa.Column('paciente_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['dentista_id'], ['usuarios.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['paciente_id'], ['pacientes.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('calendar_events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_calendar_events_dentista_id'), ['dentista_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_calendar_events_paciente_id'), ['paciente_id'], unique=False)

    op.create_table('log_auditoria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('model_name', sa.String(length=200), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('changes_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['usuarios.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('log_auditoria', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_log_auditoria_user_id'), ['user_id'], unique=False)

    op.create_table('media_pacientes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['paciente_id'], ['pacientes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('odontograma_dente_estado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.Column('tooth_id', sa.String(length=3), nullable=False),
    sa.Column('estado_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['paciente_id'], ['pacientes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('paciente_id', 'tooth_id', name='uq_paciente_tooth_id')
    )
    with op.batch_alter_table('odontograma_dente_estado', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_odontograma_dente_estado_paciente_id'), ['paciente_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_odontograma_dente_estado_tooth_id'), ['tooth_id'], unique=False)

    op.create_table('planos_tratamento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.Column('dentista_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PROPOSTO', 'APROVADO', 'CONCLUIDO', 'CANCELADO', name='status_plano_enum'), server_default=sa.text("'PROPOSTO'"), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('desconto', sa.Numeric(precision=10, scale=2), server_default=sa.text('0'), nullable=False),
    sa.Column('valor_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['dentista_id'], ['usuarios.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['paciente_id'], ['pacientes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('planos_tratamento', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_planos_tratamento_dentista_id'), ['dentista_id'], unique=False)

    op.create_table('timeline_evento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('evento_tipo', sa.String(length=50), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=False),
    sa.Column('evento_contexto', sa.Enum('PACIENTE', 'SISTEMA', name='timeline_contexto_enum'), server_default='PACIENTE', nullable=False),
    sa.ForeignKeyConstraint(['paciente_id'], ['pacientes.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('timeline_evento', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_timeline_evento_evento_tipo'), ['evento_tipo'], unique=False)
        batch_op.create_index(batch_op.f('ix_timeline_evento_paciente_id'), ['paciente_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_timeline_evento_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_timeline_evento_usuario_id'), ['usuario_id'], unique=False)

    op.create_table('itens_plano',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plano_id', sa.Integer(), nullable=False),
    sa.Column('procedimento_id', sa.Integer(), nullable=False),
    sa.Column('procedimento_nome_historico', sa.String(length=255), server_default=sa.text("'Procedimento não definido'"), nullable=False),
    sa.Column('valor_cobrado', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('descricao_dente_face', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['plano_id'], ['planos_tratamento.id'], ),
    sa.ForeignKeyConstraint(['procedimento_id'], ['procedimentos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lancamentos_financeiros',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plano_id', sa.Integer(), nullable=False),
    sa.Column('valor', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('metodo_pagamento', sa.String(length=50), nullable=False),
    sa.Column('tipo_lancamento', sa.Enum('PAGAMENTO', 'AJUSTE', name='lancamento_tipo_enum'), server_default=sa.text("'PAGAMENTO'"), nullable=False),
    sa.Column('notas_motivo', sa.Text(), nullable=True),
    sa.Column('data_lancamento', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('lancamento_estornado_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lancamento_estornado_id'], ['lancamentos_financeiros.id'], ),
    sa.ForeignKeyConstraint(['plano_id'], ['planos_tratamento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lancamentos_financeiros', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lancamentos_financeiros_lancamento_estornado_id'), ['lancamento_estornado_id'], unique=False)

    op.create_table('parcela_prevista',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plano_id', sa.Integer(), nullable=False),
    sa.Column('data_vencimento', sa.Date(), nullable=False),
    sa.Column('valor_previsto', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('observacao', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['plano_id'], ['planos_tratamento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parcela_prevista')
    with op.batch_alter_table('lancamentos_financeiros', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lancamentos_financeiros_lancamento_estornado_id'))

    op.drop_table('lancamentos_financeiros')
    op.drop_table('itens_plano')
    with op.batch_alter_table('timeline_evento', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_timeline_evento_usuario_id'))
        batch_op.drop_index(batch_op.f('ix_timeline_evento_timestamp'))
        batch_op.drop_index(batch_op.f('ix_timeline_evento_paciente_id'))
        batch_op.drop_index(batch_op.f('ix_timeline_evento_evento_tipo'))

    op.drop_table('timeline_evento')
    with op.batch_alter_table('planos_tratamento', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_planos_tratamento_dentista_id'))

    op.drop_table('planos_tratamento')
    with op.batch_alter_table('odontograma_dente_estado', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_odontograma_dente_estado_tooth_id'))
        batch_op.drop_index(batch_op.f('ix_odontograma_dente_estado_paciente_id'))

    op.drop_table('odontograma_dente_estado')
    op.drop_table('media_pacientes')
    with op.batch_alter_table('log_auditoria', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_log_auditoria_user_id'))

    op.drop_table('log_auditoria')
    with op.batch_alter_table('calendar_events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_calendar_events_paciente_id'))
        batch_op.drop_index(batch_op.f('ix_calendar_events_dentista_id'))

    op.drop_table('calendar_events')
    op.drop_table('anamneses')
    with op.batch_alter_table('agendamentos', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_agendamentos_dentista_id'))

    op.drop_table('agendamentos')
    op.drop_table('usuarios')
    op.drop_table('procedimentos')
    op.drop_table('pacientes')
    op.drop_table('fechamento_caixa')
    # ### end Alembic commands ###
